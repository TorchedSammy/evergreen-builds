name: ltreesitter

on:
  schedule:
    - cron: '0 0 1/14 * *'
  push:
    branches: master

jobs:
  ltreesitter-windows:
    name: ltreesitter on Windows
    runs-on: windows-latest
    needs: ltreesitter-linux
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            base-devel
            git
            mingw-w64-x86_64-tree-sitter
            mingw-w64-x86_64-lua
            mingw-w64-x86_64-gcc
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          repository: 'takase1121/ltreesitter'
          ref: lite-xl-plugin-api
          submodules: true
      - name: 'Build'
        run: CFLAGS="-I./include -Wall -Wextra -Werror -Og -ggdb -std=c99 -fPIC" make ltreesitter.so && mv ltreesitter.so ltreesitter.dll
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ltreesitter-windows
          path: ltreesitter.dll
      - name: Checkout builds repo
        uses: actions/checkout@v3
        with:
          path: builds-repo
      - name: Create Release(s)
        env: { GITHUB_TOKEN: "${{ github.token }}" }
        shell: powershell
        working-directory: builds-repo
        run: gh release upload builds ../*.dll

  ltreesitter-linux:
    name: ltreesitter on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          repository: 'takase1121/ltreesitter'
          ref: lite-xl-plugin-api
          submodules: true
      - name: 'Build'
        uses: docker://fedora:latest
        with:
          args: sh -c "sudo dnf install make gcc lua lua-devel libtree-sitter libtree-sitter-devel -y && make ltreesitter.so"
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ltreesitter-linux
          path: ltreesitter.so
      - name: Checkout builds repo
        uses: actions/checkout@v3
        with:
          path: builds-repo
      - name: Create Release(s)
        env: { GITHUB_TOKEN: "${{ github.token }}" }
        working-directory: builds-repo
        run: gh release delete -y builds || true; gh release create -p -t 'Builds' builds ../*.so
